{% set name = "libpysal" %}
{% set version = "4.13.0" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 71a07f7a2e705632862c15c51af5171a42391c874a7efd6711f06c7e4e9c6f53
  patches:
    - patches/0001-test_weights_relative_to_absolute.patch

build:
  number: 0
  script: {{ PYTHON }} -m pip install . --no-deps --no-build-isolation -vv
  # libpysal upstream moved on to py310, using the new typing system
  skip: True  # [py<310]
  script_env:
    - SETUPTOOLS_SCM_PRETEND_VERSION={{ version }}

requirements:
  build:
    - patch     # [not win]
    - m2-patch  # [win]
  host:
    - python
    - pip
    - setuptools
    - setuptools_scm
    - wheel
  run:
    - python
    - beautifulsoup4 >=4.10
    - scipy >=1.8
    - numpy >=1.22
    - pandas >=1.4
    - packaging >=22
    - platformdirs >=2.0.2
    - requests >=2.27
    - shapely >=2.0.1
    - scikit-learn >=1.1
    - geopandas >=0.10.0
  run_constrained:
    - joblib >=1.2
    - networkx >=2.7
    - numba >=0.55
    - pyarrow >=7.0
    - sqlalchemy >=2.0
    - xarray >=2022.3

test:
  source_files:
    - libpysal/weights/tests/test_weights.py
    - pyproject.toml
  imports:
    - libpysal
    - libpysal.cg
    - libpysal.cg.ops
    - libpysal.examples
    - libpysal.io
    - libpysal.io.geotable
    - libpysal.io.iohandlers
    - libpysal.io.tests
    - libpysal.io.util
    - libpysal.weights
    - libpysal.common
  commands:
    - pip check
      # check that pip gets the correct version 
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"
    - python -c "from libpysal.examples import summary; print(summary())"
    - python -c "from libpysal.examples import available; print(available())"
    - python -c "from libpysal.examples import get_path; example_path = get_path('10740.shp'); assert(example_path is not None)"
      # smoke test on only test weight due to the rest of the test using all relative imports to the source code.
      # skipping test_plot due to reading a datafile, importing matplotlib and warnings causing overall test to fail.
    - pytest libpysal/weights/tests/test_weights.py -k "not test_plot"
  requires:
    - pip
    - pytest

about:
  home: https://pysal.org
  summary: Core components of PySAL A library of spatial analysis functions
  description: |
    libpysal offers four modules that form the building blocks in many upstream 
    packages in the PySAL family. Spatial Weights: libpysal.weights. Input-and 
    output: libpysal.io. Computational geometry: libpysal.cg. Built-in example 
    datasets libpysal.examples
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  dev_url: https://github.com/pysal/libpysal
  doc_url: https://pysal.org/libpysal/

extra:
  recipe-maintainers:
    - ocefpaf
